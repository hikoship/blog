<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tech on The Great Garage</title><link>https://blog.hgao.net/categories/tech/</link><description>Recent content in Tech on The Great Garage</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 22 Feb 2020 +0000</lastBuildDate><atom:link href="/categories/tech/" rel="self" type="application/rss+xml"/><item><title>照片处理工作流</title><link>https://blog.hgao.net/post/photo-postprocessing-workflow/</link><pubDate>Sat, 22 Feb 2020 +0000</pubDate><guid>https://blog.hgao.net/post/photo-postprocessing-workflow/</guid><description>&lt;p>从二〇一七年接触摄影开始，自己的摄影知识一直停留在快门、光圈、ISO 而已，照片也只用 JPEG 存储。去年九月，阿炜帮我把相机升级成了索尼 A7III，于是下决心精进一下拍照技术。这期间切身体会到了 RAW 格式之于 JPEG 的优势（尤其在索尼 JPEG 直出并不出众的情况下），并形成了使用 RAW 拍照的习惯。由此也发展出自己的一套以 RAW 为基础的照片工作流。&lt;/p>
&lt;h3 id="导入">导入&lt;/h3>
&lt;p>我用 Lightroom 作为处理工具，所以直接把照片通过电脑读卡器导入到 Lightroom 中。在此之前不进行照片筛选，因为相机自己的显示屏素质平庸，MacBook 的 Finder 预览 RAW 的速度又不尽如人意。&lt;/p>
&lt;h3 id="筛选">筛选&lt;/h3>
&lt;p>在 Lightroom 里结合使用旗帜标记（flag）和星级来实现筛选的功能。在第一遍筛选中，将明显的废片标记为拒绝（rejected，快捷键 &lt;code>x&lt;/code>）。其他照片则按照如下标准评定星级：&lt;/p>
&lt;ul>
&lt;li>一星：还凑合的照片。没有拍糊，但也没有太多反复观看的价值。&lt;/li>
&lt;li>二星：后期难度大，但有潜力的照片。这个类别比较难定义。举个例子，在拍摄大光比的风光照片时，经常会拍好多张，难以在短时间内比较其优劣，于是就挑一张还不错的重点后期处理，并标为五星，其他的归到二星。实际操作中，很少有照片是二星。&lt;/li>
&lt;li>三星：优秀的照片。或是具有一定的美感，或是有所叙事，能勾起我拍照时的回忆，可能会在以后时不时拿出来观看回味。&lt;/li>
&lt;li>四星：家人朋友的露脸照片。因为涉及到隐私，所以单独处理。&lt;/li>
&lt;li>五星：非常好的照片，或者需要复杂后期的优秀照片。&lt;/li>
&lt;/ul>
&lt;p>在第一遍筛选过程中，如果在两个星级之间摇摆，则尽量向高分靠拢。后面处理时候会根据需要对照片降级。在每一百张未被拒绝的照片中，五星比例大概在百分之五，三星百分之二十，其余大部分一星。当然，这个比例会根据拍摄的题材和场景变化。&lt;/p>
&lt;h3 id="处理">处理&lt;/h3>
&lt;p>第一步，先删除被拒绝的照片。然后根据星级，按从高到低的顺序处理，同时，如果有需要，对照片进行降级。&lt;/p>
&lt;ul>
&lt;li>五星：逐张精细处理，包括曝光，色彩，裁剪等等。这其中的技巧和习惯因人而异，就不展开说了。如果有多张重复，考虑将重复照片降级为二星；如果处理空间不大，或者觉得照片没有那么好看，考虑降级为三星。&lt;/li>
&lt;li>四星：原封不动&lt;/li>
&lt;li>三星：与五星类似，逐一处理。有重复或者没那么好看的，降级成一星&lt;/li>
&lt;li>二星：原封不动&lt;/li>
&lt;li>一星：使用 Lightroom 的自动处理功能（快捷键 &lt;code>Shift&lt;/code> + &lt;code>A&lt;/code>）快速处理。如果觉得有的照片实在没有价值，考虑删除。&lt;/li>
&lt;/ul>
&lt;p>在每一星级的处理之后，确保被拒绝的照片均已删除，从而减少无效劳动。&lt;/p>
&lt;h3 id="导出和存储">导出和存储&lt;/h3>
&lt;p>根据星级不同，导出 RAW 和 JPEG 两种格式，存储在移动硬盘、Flickr、Google Photos 三个位置。JPEG 我会按百分之九十的品质导出，追求极限的话可以用百分之百，但我没仔细比较过两者差别，我也没有强迫症，反正乍一看看不出什么不同。心里不膈应就行了。&lt;/p>
&lt;p>首先，在电脑的本地硬盘建立三个目录：&lt;code>google_photos&lt;/code>，&lt;code>flickr&lt;/code> 和 &lt;code>raw&lt;/code>。接下来分别进行如下操作：&lt;/p>
&lt;ul>
&lt;li>五星：导出 RAW 格式到 &lt;code>raw&lt;/code> 目录，同时导出 JPEG 格式到 &lt;code>flickr&lt;/code> 目录&lt;/li>
&lt;li>四星、二星：导出 RAW 格式到 &lt;code>raw&lt;/code> 目录&lt;/li>
&lt;li>三星：导出 JPEG 格式到 &lt;code>flickr&lt;/code> 目录&lt;/li>
&lt;li>一星：导出 JPEG 格式到 &lt;code>google_photos&lt;/code> 目录&lt;/li>
&lt;/ul>
&lt;p>导出完毕后，将 &lt;code>flickr&lt;/code> 目录中的所有照片复制到 &lt;code>google_photos&lt;/code> 目录下，使 &lt;code>flickr&lt;/code> 成为 &lt;code>google_photos&lt;/code> 的一个子集。然后，在移动硬盘（或 NAS，或其他永久存储资料的地方）建立一个目录，用于存放所有本次导出的照片。将 &lt;code>google_photos&lt;/code> 和 &lt;code>raw&lt;/code> 文件夹备份进移动硬盘。同时进行在线备份，将 &lt;code>google_photos&lt;/code> 上传到 Google Photos。将 &lt;code>flickr&lt;/code> 上传到 Flickr。上传 Flickr 时可以根据情况标记相册、标签，不强求完美。&lt;/p>
&lt;h3 id="体验">体验&lt;/h3>
&lt;p>这种策略实行了几个月，处理过五六次照片，总体比较满意，修出了一些好看的照片，理论上也能很大程度保证照片的安全。比起以前无脑直出，体会到了照片处理软件和 RAW 格式的强大魔力。统计了某一次拍摄，共两百张照片使用 Lightroom 的处理时间，其中没有高难度的风景照或是需要精修的照片，大概花费了一个小时，还是可以接受的。保持效率的重要因素就是，学会取舍。一张照片如果看着不那么顺眼，就快修然后 move on（怎么翻译？）。&lt;/p>
&lt;p>这个工作流也有一些欠缺的地方，比如二星和四星的处理方式其实一模一样、硬盘照片如何检索、如何保证安全等等。同样的道理，这些都是要取舍的。如果今后有更好的点子或&lt;strong>非常多&lt;/strong>的闲钱（用来搭 NAS、组 RAID、或者订阅更大的网盘）再说吧。努力拒绝完美主义，拒绝强迫症，除非因为它们而做不到：）。&lt;/p></description></item><item><title>An Optimization of QMK Mod-tap (Layer-tap) for Fast Typists</title><link>https://blog.hgao.net/post/qmk-mod-key/</link><pubDate>Wed, 22 May 2019 +0000</pubDate><guid>https://blog.hgao.net/post/qmk-mod-key/</guid><description>&lt;p>&lt;strong>The code doesn&amp;rsquo; work as expected. Please refer to &lt;code>IGNORE_MOD_TAP_INTERRUPT&lt;/code> and &lt;code>PERMISSIVE_HOLD&lt;/code> &lt;a href="https://github.com/qmk/qmk_firmware/blob/master/docs/config_options.md">here&lt;/a> for possible workarounds.&lt;/strong>&lt;/p>
&lt;p>&lt;a href="http://qmk.fm">QMK&lt;/a> is the most powerful and popular keyboard firmware in custimzed mechanical keyboard community. It allows you to can write C code to set macros to any key, which makes it highly playable.&lt;/p>
&lt;p>Apart from programming, QMK has quite a lot of pre-set quantum keys. An important category of them is mod-tap keys. That means, when you tap the key, it prints a normal output, such as a letter, digit or any other key on the keyboard; when you hold it, it works like a mod key, such as Control, Alt, Shift or Win (Command/Super). That&amp;rsquo;s particually useful for mini keyboards (40% layout, for example), where keys are highly reused.&lt;/p>
&lt;p>However, the performance of mod-tap may not meet the need of fast typing. For example, if the mod-tap key is Control(A), and you press Control(A) and C fast, it actually prints &amp;ldquo;AC&amp;rdquo; on the screen, but not sends a Control + C combination. The same thing happens on layer-tap key.&lt;/p>
&lt;p>I haven&amp;rsquo;t read the source code of mod-tap keys, but with programming, we can avoid this issue completely.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">QMK_KEYBOARD_H&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="kt">bool&lt;/span> &lt;span class="n">lctl_other_key_pressed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="kt">uint16_t&lt;/span> &lt;span class="n">lctl_hold_timer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="kt">bool&lt;/span> &lt;span class="nf">process_record_user&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">uint16_t&lt;/span> &lt;span class="n">keycode&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">keyrecord_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">record&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="k">switch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">keycode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="c1">// Left control. Can be changed to any modifier, or MO({LAYER_NUM}) for layer-taps.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">case&lt;/span> &lt;span class="nl">KC_LCTL&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">record&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pressed&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="c1">// Records press time.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">lctl_hold_timer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">timer_read&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="c1">// At the beginning, no other key is pressed.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">lctl_other_key_pressed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">timer_elapsed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lctl_timer&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">500&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">space_other_key_pressed&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="c1">// Sends out &amp;#39;A&amp;#39; if the key is held for less than 0.5s and no other key was pressed during the period.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">tap_code&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">KC_A&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="c1">// Another key is pressed.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">lctl_other_key_pressed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl">&lt;span class="p">};&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>In this piece of code, we set the keycode of the mod-tap key to a normal Control key. It ensures it works perfectly as a mod key. Then we attach another event to this key when it is released - we sends a normal letter, which is the &amp;ldquo;tap&amp;rdquo; part of mod-tap. Tap is only triggerred when the key was held shortly and no other key is pressed before release. This way, even fast typists can enjoy mod-tap keys happily.&lt;/p>
&lt;p>I&amp;rsquo;m not sure if the current behavior of mod-tap is expected by QMK developer, but I will do some investigation on it and see if I can make the solution general to the default mod-tap implementation.&lt;/p></description></item><item><title>Google Chromecast VS Amazon Fire TV, And Echo Dot</title><link>https://blog.hgao.net/draft/chromecast-firetv-echodot/</link><pubDate>Sat, 28 Jul 2018 -0700</pubDate><guid>https://blog.hgao.net/draft/chromecast-firetv-echodot/</guid><description>&lt;p>I haven&amp;rsquo;t written blog since the end of last year, which is a really long period of time with many stories happend. Nor have I read any books, if I remember correctly, and that&amp;rsquo;s another story. The fact is, I moved to Bay Area last month together with Miss Gui, and started our career at respective companies.&lt;/p>
&lt;p>A new home should have a new TV, so here appears a TV. It&amp;rsquo;s a FHD 49-inch Insignia TV with only 200 bucks. I can&amp;rsquo;t tell the details of color display. I know it&amp;rsquo;s good enough for me, though. The TV is dumb (not smart), so in the first a few days, I had to connect the TV to a laptop to play videos on it. You know, it was far from the best solution. What I want is to insert a tool in the TV, and control it to play YouTube videos with my phone. Basically, I have the three possible solutions. Apple TV works best with my Macbook Pro and iPhone, but it&amp;rsquo;s way more pricer than other two competitors. Fire TV has a remote, and looks like it can satisfy my requirements. Chromecast is the cheapest one (20 bucks), and is totally controlled by Phone, which is also good to me. Therefore, I choosed Chromecast as my first smart TV device.&lt;/p></description></item><item><title>我的手机图鉴</title><link>https://blog.hgao.net/post/my-cellphones/</link><pubDate>Sun, 18 Dec 2016 -0800</pubDate><guid>https://blog.hgao.net/post/my-cellphones/</guid><description>&lt;p>（写这篇博客之前读了 &lt;a href="http://dlyang.me">LanternD&lt;/a> 同学的&lt;a href="http://dlyang.me/cellphone-evolution-1/">《手机进化史 · 上篇》&lt;/a>和&lt;a href="http://dlyang.me/cellphone-evolution-2/">《手机进化史 · 下篇》&lt;/a>，行文之中会下意识地借鉴，在此表示感谢。）&lt;/p>
&lt;h2 id="功能机时代">功能机时代&lt;/h2>
&lt;h3 id="联想型号不可考二五年九月-至-约二六下半年">联想（型号不可考，二〇〇五年九月 至 约二〇〇六下半年）&lt;/h3>
&lt;p>小学六年级，我转学到了上海。人生地不熟，为了方便与家人联络，在开学前几天，老爸带我去牡丹江路的电器商场（是国美永乐还是苏宁呢？）兜了一圈，带回了我的第一部手机。我不记得它的型号，连样子也有些模糊。能够确定的，那是一部一千多块的联想翻盖拍照手机，小巧的银色机身，尚可盈盈一握。这对于小学生来说已经相当奢侈了。拿到它的第一天晚上，和老爸在北翼商业街的大排档附近漫步，给老妈打了第一个电话，当时老妈用的还是几百块的小灵通呢，真是不好意思（笑）。&lt;/p>
&lt;p>除了那寒碜的摄像头，这部手机没什么可玩性。只是当时的需求也高不到哪去，一个俄罗斯方块足以让我玩到半夜，还会因为在将死之际化险为夷而心跳加速睡不着觉。&lt;/p>
&lt;p>至少在〇六年德国世界杯期间，它的表现还是很正常的。我清楚记得决赛夜里，正是它的闹钟把我准时唤醒。然而由于翻盖设计对排线的损耗，这部手机在之后经常点不亮屏幕，再加上当时有了老爸淘汰下来的备用机，我用它的频率日渐减少。终于，从某一天开始，它再也没有点亮过。如今，经过几次搬家，我已不知它现在委身于何处，或许仍在上海的家中吧。按照王国维的二重证据法，我既找不到实物，又没有相关的「史料」，恐怕是难以对它有更清楚的印象了。&lt;/p>
&lt;p>它的另一个重要意义是：&lt;strong>从那时候起，我的身边就一直伴随着一个电子设备&lt;/strong>。而这一点，可能永远都不会再改变。&lt;/p>
&lt;h3 id="摩托罗拉-e360约二六下半年-至-二七年五月">摩托罗拉 E360（约二〇〇六下半年 至 二〇〇七年五月）&lt;/h3>
&lt;p>&lt;img src="https://blog.hgao.net/images/post/cellphone/moto-e360.jpg" alt="摩托罗拉 E360">&lt;/p>
&lt;p>之前提到老爸淘汰了一部备用机，便是这摩托罗拉 E360。这是我们全家的第一部手机，大概是老爸在〇二、〇三年购买的。有意思的是，我不仅记得它的型号，还记得当时的价格是一千六百八十元（题外话：一段时间后我在手机店里看到了它，价格变成了八百八十元）。&lt;/p>
&lt;p>由于年代的关系，它的各方面性能都不如我的联想。屏幕不够绚丽，响应不够迅速，更没有摄像头。然而当时的摩托罗拉是一线大厂，质量可靠，所以在我的联想罢工之后，它忠实地承担起了我的通讯任务。可惜的是，里面的游戏实在是不好玩。&lt;/p>
&lt;p>直到最后，它似乎都没出现什么故障，如今也不知身在何处。&lt;/p>
&lt;h2 id="塞班王朝的兴衰">塞班王朝的兴衰&lt;/h2>
&lt;h3 id="诺基亚-3230二七年五月-至-约二九上半年">诺基亚 3230（二〇〇七年五月 至 约二〇〇九上半年）&lt;/h3>
&lt;p>&lt;img src="https://blog.hgao.net/images/post/cellphone/nokia-3230.jpg" alt="诺基亚 3230">&lt;/p>
&lt;p>话说两朝老臣 E360 一直兢兢业业，虽说无功但也无过，对于一个中学生来说，还能有什么苛求呢？然而出于一些我不记得的原因，爸妈还是同意在二〇〇七年的五一长假，带我去牡丹江路换一部新手机。琳琅满目的柜台中，我一眼就看到了造型独特的诺基亚 3230。&lt;/p>
&lt;p>我很早就知道 3230。它是一部经典街机，在各种电视广告、海报中都能见到它酒红色的机身。有一次独身一人乘飞机回青岛，身边的时髦女性用着 3230，给年幼的我一种难以名状的感觉，而且我以为这种感觉是如今的 iPhone 所传达不出来的。&lt;/p>
&lt;p>时过境迁，这部曾经的中高端手机价格不断跳水，来到了一千五百元的价位；而看到我望眼欲穿的样子，爸妈也把预算从一千提高到了一千五——两个数字相遇，我满心欢喜地带着诺基亚 3230 回家了。&lt;/p>
&lt;p>对我而言，诺基亚 3230 最大的价值是它的 Symbian S60 V2 操作系统，让我从功能机用户一跃成为智能手机玩家。最初，由于系统的故障，第三方软件包一直无法安装，但其自带的 FIFA 2005 已经能让我玩得不亦乐乎。后来去家门口的手机店刷了下系统，开始安装各种各样的软件、游戏、主题和字体。再加上国庆长假开通了 GPRS 网络（大概是 10 元 / 50 MB，还记得那天从联通营业厅回家时，走到宝山文化中心，看到屏幕左上角跳出来的「G」时兴奋的心情），从此打开了一个潘多拉魔盒。&lt;/p>
&lt;p>当时的 S60 平台软件丰富，可玩性高，不乏佳作。UCWeb 5.1（UC 浏览器的前身）提供了标签浏览功能，在现在看来仍十分人性化；GameLoft 公司出品的 Java 运动游戏只有一百多 KB 的大小，却五脏俱全，无论是网球还是篮球，其成熟度都超过很多如今 iOS / Android 平台的游戏；QQ 2007 简洁而强大，已经具备了日常所需的基本功能。&lt;/p>
&lt;p>最令我兴奋的是，S60 上有一个叫做 vBag 的 GBA 模拟器。最初尝试了一个马里奥游戏，十分卡顿。但谢天谢地我没有放弃，重启之后，清空了内存（大概一共只有十几兆），3230 成功运行了《精灵宝可梦：红宝石》。我立即意识到，手里的这部设备可以化身一个无所不能的游戏机，而且它全天二十四小时属于我，意味着我再也不用眼巴巴盼望着每周几小时的玩电脑时间。爸妈或许从未想到，这个超出预算的手机竟能有如此大的魔力，还好我没有因此（太）荒废学业。&lt;/p>
&lt;p>题外话，当时还没有响应式设计（Responsive Design）的概念，手机上网大多数访问的是 Wap 网页，只有寥寥的文字连接，却能在 GPRS 网络下高速加载。当时常去的几个网站：一个是新浪体育；一个是尚且十分简洁清爽的百度贴吧；一个是&lt;a href="http://www.d.cn">当乐网&lt;/a>，游戏资源丰富，如今仍在运作；还有一个是天网手机论坛（waptw.com)，从游戏到各种改版、美化、破解，无所不包。对我影响深刻的《超级机器人大战 OG2》游戏 ROM，就是在天网论坛下载到的。可惜天网现在似乎已经无法访问了。&lt;/p>
&lt;p>3230 还有一定的多媒体功能。虽然屏幕分辨率只有 176 * 208，存储卡也只有 128MB，但好歹能放几首歌或者短视频进去。那些年用它听过《千里之外》，《秋天不回来》，看过麦蒂三十五秒十三分的视频。哎，暴露年龄系列。&lt;/p>
&lt;p>诺基亚 3230 &lt;strong>从来没有让我感到无聊过&lt;/strong>。这是一个很高的评价。然而它的寿命不长，由于 GBA 游戏玩得太多，它娇小脆弱的摇杆不再灵敏，逐渐被我搁置，如今可能在家中的某个角落颐养天年吧。与此同时，老爸的又一部备用机出现在我的眼前，它搭载了最新的 S60 V3 系统，成功吸引了我的注意。&lt;/p>
&lt;h3 id="诺基亚-e50约二九上半年-至-二一年四月">诺基亚 E50（约二〇〇九上半年 至 二〇一〇年四月）&lt;/h3>
&lt;p>&lt;img src="https://blog.hgao.net/images/post/cellphone/nokia-e50.jpg" alt="诺基亚 E50">&lt;/p>
&lt;p>这部诺基亚 E50 是老爸公司配发的手机，然而用了一阵之后，老爸显然不能体会到智能手机的魅力，换回了他之前的诺基亚 6270。于是，失宠的 E50 只能轮到我来疼爱了。&lt;/p>
&lt;p>E50 采用 S60 V3 操作系统，虽然屏幕尺寸比 3230 小，但是分辨率提升到 240 * 320，显示效果相当细腻。其运行内存大概是整个 S60 V3 家族中最小的（价格可能也是最便宜的），但比 3230 强不少，这意味着我可以使用模拟器加速进行 GBA 游戏了！（这很重要！）&lt;/p>
&lt;p>虽然没有统计过，但我相信自己在 E50 上花费的游戏时间相当可观。除了《精灵宝可梦》和《超级机器人大战》，我还打穿了《逆转裁判》和《火焰之纹章》两个经典系列，至今仍保留着很多美好的回忆。&lt;/p>
&lt;p>至于其他游戏，除了依然令人爱不释手的 GameLoft 作品之外，另一个神奇的游戏是《冠军足球经理》。几百 KB 的程序包括了联赛杯赛、球员买卖、战术布置等核心要素，其中的一些妖人更是几年后在现实中崭露头角。诺伊尔、拉姆塞都是我在这款游戏中认识的。&lt;/p>
&lt;p>除了显示和计算性能的提升，S60 V3 的软件资源也更为丰富。V3 和 V2 的应用程序互不兼容，有些 V2 上的好软件（比如内存管理）到 V3 中就找不到了。但同时，也有更多的 V3 独占应用可供选择。V3 的一大特点（缺点）是，安装软件需要认证签名，这算是我第一次真正意义上地「折腾」手机。&lt;/p>
&lt;p>由于大量的游戏操作，E50 的「7」键和「*」键（分别充当 GBA 的「B」键和「A」键）被我摧残至掉漆，摇杆也越发不灵敏；金属外壳在屡次摔碰之下已经变形，被我贴上胶带继续使用（质量真是好）。终于有一天，它的摇杆完全没有反应，我却不愿放弃，从淘宝买了一个替换摇杆自己拆机，却再也点不亮它。&lt;/p>
&lt;p>和前任们一样，E50 的遗体也不知在何方。大概越是喜爱，就越容易过度使用，从而结局也变得越发悲惨吧。&lt;/p>
&lt;h3 id="诺基亚-5233二一年四月-至-二一三年一月">诺基亚 5233（二〇一〇年四月 至 二〇一三年一月）&lt;/h3>
&lt;p>&lt;img src="https://blog.hgao.net/images/post/cellphone/nokia-5233.jpg" alt="诺基亚 5233">&lt;/p>
&lt;p>历史的车轮滚滚向前。塞班系统虽然普及，但随着苹果和 Android 阵营的发力，中高端市场已经被全触屏手机所占据。作为应对，诺基亚发布了搭载 S60 V5 触屏专用系统的 N97、5800XM、5530XM、5230、5233。虽然价格上拉开了很大差距，但它们的 CPU、内存、分辨率却完全相同（5530XM 作为其中的次高端手机，屏幕竟然比低端 5230、5233 还小，不能理解）。5230 比 5233 多了 3G 网络，对我也没多大用处，于是我自然选择了其中最便宜、一千块出头的 5233。&lt;/p>
&lt;p>相比 E50，5233 的性能更上一个台阶（毕竟和旗舰 N97 持平），玩 GBA 游戏已经是毫无压力。但去掉了键盘，初期打字还是有些不便，《冠军足球经理》这样的优秀游戏也玩不到了，好在 GBA 模拟器永远都能满足我啊。&lt;/p>
&lt;p>5233 的真正优势是多媒体能力。640 * 360 的 3.2 寸屏幕能够以（在当时看来）相当不错的效果观看视频，我用它看完了《魔法禁书目录》、《某科学的超电磁炮》、《Clannad》等经典动画。为了节省空间而不断用格式工厂调整码率，恐怕是那个时代特有的回忆。&lt;/p>
&lt;p>那是塞班最后的巅峰，高中的班里有不少塞班用户。作为第一个 S60 V5 玩家，我为此还给大家写过破解和签名的教程。大概那时候开始，我可能给同学们一种「资深手机玩家」的印象，大家买手机有时候会找我咨询。&lt;/p>
&lt;p>当时间来到二〇一三年的时候，塞班无论从性能还是应用生态上，都已经完全无法抗衡 iOS 和 Android。于是，以「不能收邮件、不能与 Google 帐号同步、不能用 Dropbox 移动办公」为由，5233 被我强制退休了。&lt;/p>
&lt;p>5233 是我用过最长寿、最耐操的的手机。我不记得在哪家店、用什么价格买回了它，但它的结局最为安详：完好无损地躺在我家中的抽屉里，无疾而终。&lt;/p>
&lt;p>如果说移动电话发展至今，把它前后分为两段，那么切分点毫无疑问是二〇〇七年——第一代 iPhone 发布。此后的近十年间，手机从一个通讯工具，变成一个和电脑一样、几乎全能的数字计算设备。塞班系统作为前 iPhone 时代的智能手机，没有出众的计算能力，没有复杂的社交功能，但其中那些纯粹的应用让我始终难以忘怀。我总能明白，自己在用手机做什么，自己的时间花在了什么地方。&lt;/p>
&lt;h2 id="重新发明手机">「重新发明手机」&lt;/h2>
&lt;h3 id="索尼-xperia-acro-slt26w二一三年一月-至-二一四年九月">索尼 Xperia Acro S（LT26W，二〇一三年一月 至 二〇一四年九月）&lt;/h3>
&lt;p>&lt;img src="https://blog.hgao.net/images/post/cellphone/sony-lt26w.jpg" alt="索尼 Xperia Acro S (LT26W)">&lt;/p>
&lt;p>Acro S 是我的第一部 Android 手机，也是第一部水货手机。二〇一三年的寒假，我在上海火车站不夜城，从 Jack（我的高中同桌，全班第一位 Android 用户）推荐的店里带回了它，价格是两千两百八十元。作为索尼上一代主力机型 Xperia S (LT26i) 的防水版，算是两千元档性价比不错的选择。它的性能与 5233 不可同日而语，GBA 游戏八倍速运行毫无压力。更直观的性能反映是，它可以使用 NDS 模拟器了！虽然模拟速度不快，但足以让我体验无穷丰富的 NDS 游戏资源。&lt;/p>
&lt;p>Acro S 配备一块 720P 的 4.3 寸屏幕，像素密度达到 Retina 标准，但因为 iPad 的存在，我并没有用它看很多视频，同时 Android 原生游戏也没有深入体验。&lt;/p>
&lt;p>那段时间，我很注重个人数据的云同步，Android 在这方面提供了一个优秀的平台。Dropbox、Gmail、Google Calendar、Google Contacts 这些需求都可以通过 Android 管理，再也不必担心数据丢失。Google Now 更是一次次带来惊喜，也经常被我用于向父母、同学展示大数据的魅力。大概从这时开始，手机从一个通讯、娱乐工具，变成了我的个人数据管理终端。&lt;/p>
&lt;p>Acro S 没少被我折腾。用了一阵原生系统后，开始着手对一些不如意的地方进行改造。先是 root 之后删了些内置应用，后来直接刷各种各样的 ROM。索尼的官方系统只支持到 Android 4.0，但我把 4.1 到 4.4 的系统都刷过一遍。无奈 Acro S 属于小众，ROM 资源相比 Xperia S 差距甚远，即使偶尔能找到新版本的系统，其稳定性也难以令人满意。&lt;/p>
&lt;p>之前提到 Acro S 是一部防水手机，没想到这竟成了它的命门。二〇一四年九月，和两位朋友玩漂流，防水袋漏了，三人手机均进水。另两位同学无法开机，我的 Acro S 却不屈不挠正常工作，带我们导航回酒店，立下汗马功劳。然而回去之后，手机开始发烫、屏幕变白，最终无法启动了。其实我觉得这点进水程度不应该对一部「防水」手机造成致命伤，但事实就是如此。可能是我没把防水口塞紧，也可能是索尼大法并没有那么好吧。&lt;/p>
&lt;p>Acro S 后来被我拆了一下，又装回去（了一部分），现在安然躺在爸妈房间的抽屉里。&lt;/p>
&lt;h3 id="lg-nexus-5二一四年九月-至今">LG Nexus 5（二〇一四年九月 至今）&lt;/h3>
&lt;p>&lt;img src="https://blog.hgao.net/images/post/cellphone/lg-nexus5.jpg" alt="LG Nexus 5">&lt;/p>
&lt;p>自从被 Jack 安利了 Nexus 系列之后，我心里就一直对「原生」有所牵挂。5233 退役时，曾试过海淘性价比超群的 Nexus 4，但因为供不应求而作罢；等到 Acro S 需要接班人的时候，我不再犹豫，毅然买下发布十个月之久、价格依旧坚挺的 Nexus 5。&lt;/p>
&lt;p>这是我第一次买一部「系统和前任相同」的手机，按理说不容易有新鲜感。但是 Nexus 5 更轻便、速度更快、屏幕更大、分辨率更高、续航更久。总而言之，这是我第一次感觉到，自己&lt;strong>买了一部「完美」的手机&lt;/strong>。&lt;/p>
&lt;p>型号带着「Nexus」，就意味着海量的刷机资源。然而折腾一轮、过了把瘾之后，还是换回了无 root 的原生系统。这一方面归功于硬件性能的提升，让用户不再需要定制以换取更快的响应速度；另一方面也归功于 Android 5.0 系统的长足进步。&lt;/p>
&lt;p>我的 Nexus 5 一直都是无套无膜裸奔，以致为它换过两次屏幕。因为屏占比太高，一旦磕碰就会碎得稀里哗啦。后来贴了钢化膜保护，倒是再也没摔过。&lt;/p>
&lt;p>今年感恩节期间，Nexus 5 的振动失灵。加上电池老化、摄像头进灰等原因，我在 eBay 上买了一部打折的 iPhone 7。未曾想，这 iPhone 有硬件故障，而 Nexus 5 的振动几天后又恢复正常，竟得以继续服役了。&lt;/p>
&lt;h2 id="后记">后记&lt;/h2>
&lt;p>十多年前，看过一个 Windows Mobile 手机的广告，上面运行着一个微缩的 Windows 98。那时我以为，这是手机的最终形态。现在，对比我的第一部联想，市面上的手机已经变得完全不同。那是一个中学生所不能想像的。十年后的手机会是什么样子？或许会有新的介质、新的交互方式；当然，也可能因为一些外在原因，停滞不前。它越来越重要，因为人与人的联络日益紧密；它也越来越不重要，因为计算设备间的界限正逐渐模糊。&lt;/p></description></item><item><title>Hugo, GitHub, VPS (2): Write a Hook Listener and Protect It Using Supervisor</title><link>https://blog.hgao.net/post/hugo-github-vps-2/</link><pubDate>Fri, 29 Jan 2016 +0800</pubDate><guid>https://blog.hgao.net/post/hugo-github-vps-2/</guid><description>&lt;p>The article will talk about the first part mentioned in &lt;em>&lt;a href="https://blog.hgao.net/post/hugo-github-vps-1/">Hugo, GitHub, VPS (1): A Work Flow for static sites&lt;/a>&lt;/em>.&lt;/p>
&lt;h2 id="create-github-webhooks">Create GitHub webhooks&lt;/h2>
&lt;p>GitHub has an &lt;a href="https://developer.github.com/webhooks/">official tutorial&lt;/a> for webhooks, you can follow it and create one easily. The tutorial sets the payload URL to &lt;code>http://localhost:4567/payload&lt;/code>, but since my hook is deployed on the VPS, I just fill in &lt;code>http://my.domain:18001&lt;/code>. The port &lt;code>:4567&lt;/code> and the subfolder &lt;code>payload&lt;/code> doesn&amp;rsquo;t matter. That&amp;rsquo;s where the &lt;em>POST&lt;/em> request is sent, and you just need to match it with the port and location of your hook. I preserve the whole &lt;code>:18001&lt;/code> port for the hook, so I let the request sent to the root path directly.&lt;/p>
&lt;p>The content type is &lt;code>application/json&lt;/code>, and we only trigger the hook for push events.&lt;/p>
&lt;h2 id="write-a-hook-listener">Write a hook listener&lt;/h2>
&lt;p>The tutorial offers a sample listener app written in &lt;a href="http://www.sinatrarb.com">Sinatra&lt;/a>, which is a Ruby micro-framework. Unfortunately, I know little about Ruby as well as Sinatra, so I choose to use &lt;a href="http://www.tornadoweb.org">Tornado&lt;/a>, a Python framework.&lt;/p>
&lt;p>There is a &lt;a href="http://www.tornadoweb.org/en/stable/#hello-world">&amp;ldquo;Hello, world&amp;rdquo; example&lt;/a> in Tornado&amp;rsquo;s documents. It has a &lt;code>get&lt;/code> method in &lt;code>MainHandler&lt;/code>, and what we want is a &lt;code>post&lt;/code> method. So delete &lt;code>get&lt;/code> and write a &lt;code>post&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">sys&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nn">subprocess&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">MainHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tornado&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">web&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">RequestHandler&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">post&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl"> &lt;span class="c1"># do something&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;New POST Received.&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl"> &lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">call&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">sys&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;/generate.sh&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Now, you can run the app and push something to your blog for which a hook has been set, and the terminal will show &lt;code>New POST Received.&lt;/code>. Then, it executes a shell script called &lt;code>generate.sh&lt;/code>, which is located in the same folder as the tornado python file. Since we want our VPS to pull down the new source codes immediately and regenerate the static site, so we embed these operations in the script file and make it look like this:&lt;/p>
&lt;pre tabindex="0">&lt;code>#! /bin/sh
cd path/to/blog-repo
git pull
rm -rf public # remove previous output files
hugo # generate the site in public/
&lt;/code>&lt;/pre>&lt;p>Then change its authority:&lt;/p>
&lt;pre tabindex="0">&lt;code>chmod +x generate.sh
&lt;/code>&lt;/pre>&lt;p>Next, we judge whether the &lt;em>POST&lt;/em> request is from our GitHub repository. Perhaps the hook is listening to several updates from different users, branches and repos, so let&amp;rsquo;s parse the &lt;em>json&lt;/em> file and read its information.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">sys&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nn">subprocess&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">MainHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tornado&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">web&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">RequestHandler&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">post&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">loads&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="n">repo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;repository&amp;#39;&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="s1">&amp;#39;full_name&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="ne">KeyError&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Not a GitHub webhook post&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">repo&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;yourusername/yourreponame&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;POST from my blog&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">call&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">sys&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;/generate.sh&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">repo&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;user2/repo2&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="c1"># do something...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">repo&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;user3/repo3&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="c1"># do something...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">repo&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;user4/repo4&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="c1"># do something&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl">&lt;span class="n">const&lt;/span> &lt;span class="n">uint16_t&lt;/span> &lt;span class="n">PROGMEM&lt;/span> &lt;span class="n">keymaps&lt;/span>&lt;span class="p">[][&lt;/span>&lt;span class="n">MATRIX_ROWS&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">MATRIX_COLS&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Your&lt;/span> &lt;span class="n">configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Finally, we add logging module and filter IP addresses outside GitHub to prevent potentially harmful pseudo &lt;em>POST&lt;/em> requests. Luckily, GitHub has &lt;a href="https://help.github.com/articles/what-ip-addresses-does-github-use-that-i-should-whitelist/">a whitelist&lt;/a>, so we only allow addresses from &lt;code>192.30.252/22&lt;/code>. Now we&amp;rsquo;ve got the whole program:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">tornado.ioloop&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nn">tornado.web&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nn">sys&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nn">logging&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nn">subprocess&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">MainHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tornado&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">web&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">RequestHandler&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">post&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">loads&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="n">ip&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remote_ip&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;.&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">ip&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;192&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;30&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ip&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">252&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="c1">## GitHub IP range&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="n">repo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;repository&amp;#39;&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="s1">&amp;#39;full_name&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="ne">KeyError&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="n">logging&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">warning&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Not a GitHub webhook post&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">repo&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;yourusername/yourreponame&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;POST from my blog&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">call&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">sys&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;/generate.sh&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="n">logging&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Unknown repo: &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">repo&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="n">logging&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">warning&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Not from GitHub. IP [&lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s1">]: &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">make_app&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">tornado&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">web&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Application&lt;/span>&lt;span class="p">([&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="sa">r&lt;/span>&lt;span class="s2">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">MainHandler&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="c1"># match your payload URL&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl"> &lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">29&lt;/span>&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">30&lt;/span>&lt;span class="cl"> &lt;span class="n">logging&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">basicConfig&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">format&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="si">%(asctime)s&lt;/span>&lt;span class="s1"> &lt;/span>&lt;span class="si">%(message)s&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">datefmt&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;%m/&lt;/span>&lt;span class="si">%d&lt;/span>&lt;span class="s1">/%Y, &lt;/span>&lt;span class="si">%a&lt;/span>&lt;span class="s1">, %H:%M:%S&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">filename&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">sys&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;/post.log&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">level&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">logging&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">INFO&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">31&lt;/span>&lt;span class="cl"> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">make_app&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">32&lt;/span>&lt;span class="cl"> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">18001&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># match your payload URL&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">33&lt;/span>&lt;span class="cl"> &lt;span class="n">tornado&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ioloop&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">IOLoop&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">current&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="protect-the-listener-process">Protect the listener process&lt;/h2>
&lt;p>In order to let our listener process run consistently in background and reboot after crash, we use &lt;a href="http://supervisord.org/">Supervisor&lt;/a> as a daemon program. Besides, it can manage multiple subprocesses of a tornado app and balance the load with the help of &lt;a href="http://nginx.org/">nginx&lt;/a>, but it&amp;rsquo;s unnecessary for a simple hook.&lt;/p>
&lt;p>Follow &lt;a href="http://supervisord.org/configuration.html">this direction&lt;/a> to put your &lt;code>supervisord.conf&lt;/code> file in proper path, and add codes like the following:&lt;/p>
&lt;pre tabindex="0">&lt;code>[program:mylistener]
command=python /path/to/mylistener.py
redirect_stderr=true
stdout_logfile=/path/to/log.log
&lt;/code>&lt;/pre>&lt;p>Then, run &lt;code>supervisorctl reload&lt;/code> to check if &lt;code>mylistener&lt;/code> has been started.&lt;/p>
&lt;h2 id="host-the-blog">Host the blog&lt;/h2>
&lt;p>Almost all static site generators have their internal server, but you can also use more dedicated web servers such as Apache or nginx for advanced performance and stability, just setting the host path to your output folder in the configuration file.&lt;/p>
&lt;p>We are done! Now try pushing something on GitHub, and you should see changes on your VPS.&lt;/p></description></item><item><title>Hugo, GitHub, VPS (1): A Work Flow for static sites</title><link>https://blog.hgao.net/post/hugo-github-vps-1/</link><pubDate>Wed, 27 Jan 2016 +0800</pubDate><guid>https://blog.hgao.net/post/hugo-github-vps-1/</guid><description>&lt;p>I changed my username (See &lt;a href="https://blog.hgao.net/about">About&lt;/a>) on Twitter and GitHub recently. Then, my updates to the blog won&amp;rsquo;t be examined by GitHub Pages. Worse is better, maybe it&amp;rsquo;s a chance for me to migrate the site on my DigitalOcean VPS. However, I still want to manage my source code on GitHub, tracing the change log and not necessary to worry about data loss.&lt;/p>
&lt;p>The tasked is divided into three sections:&lt;/p>
&lt;ol>
&lt;li>Listen to the changes (Git Push) on GitHub.&lt;/li>
&lt;li>Pull new changes from GitHub to VPS.&lt;/li>
&lt;li>Generate the site from source codes.&lt;/li>
&lt;/ol>
&lt;p>For step 3, since my blog has to be generated by Jekyll and the repository on GitHub is just source code, the VPS has to execute &lt;code>jekyll build&lt;/code> command after receiving git updates. But I met with some problems here due to Ruby and Jekyll. Again, worse is better. I thought about &lt;a href="http://gohugo.io/">Hugo&lt;/a>, which is a much faster generator written in Go. So I replaced Jekyll and refactored my blog, but it&amp;rsquo;s a painful process because it&amp;rsquo;s unfriendly to implement some logic with Hugo. Regardless, the blog you are reading is made by Hugo now.&lt;/p>
&lt;p>In the next article, I will write about how to build a hook program on the VPS with &lt;a href="http://www.tornadoweb.org/">Tornado&lt;/a> and &lt;a href="http://supervisord.org">Supervisor&lt;/a>.&lt;/p></description></item><item><title>关于个人网络帐号安全的解决方案</title><link>https://blog.hgao.net/post/a-solution-to-online-security/</link><pubDate>Mon, 19 Oct 2015 +0000</pubDate><guid>https://blog.hgao.net/post/a-solution-to-online-security/</guid><description>&lt;p>10 月 19 日下午，据漏洞报告平台&lt;a href="http://www.wooyun.org/">乌云网&lt;/a>披露，「&lt;a href="http://www.wooyun.org/bugs/wooyun-2015-0147763">某邮箱过亿数据泄漏&lt;/a>」。与此同时，各个论坛中均有使用网易邮箱的用户表示 Apple ID 被冻结，引发很多人修改淘宝、支付宝等网站绑定的网易邮箱。各种消息都指向这是来自网易的一起拖库事件。所谓拖库，是指获取网站中用于存放用户名、密码、安全问题等帐号信息的数据库。拖库无法从根本上避免，因为你无法保证注册的每个网站都有足够的安全保护。在这里想讨论的就是如何应付拖库，以及由此出发的、一套相对安全的个人网络帐号解决方案。&lt;/p>
&lt;h2 id="定期更换密码">定期更换密码&lt;/h2>
&lt;p>只要是稍微正规些的网站，都会对数据库中的用户名和密码进行加密存储，即使黑客获得数据库，也得花好一阵子才&lt;strong>可能&lt;/strong>破解。这就是要定期更换密码的原因。如果在数据库破解之前就更改了密码，破解出的内容自然也就没有价值。这实际上是通过缩短密文的有效生命周期来达到计算安全。&lt;/p>
&lt;h2 id="密码管理">密码管理&lt;/h2>
&lt;p>总有那么一些不正规的网站（比如各种小论坛），因为某些原因采用了不安全的存储方式（最直接的就是明文存储），让黑客得到了你得密码。但这些小网站往往也没有什么重要信息，为什么会造成损失呢？其关键在于，很多用户在多个网站上使用同一套用户名密码。黑客通过撞库，便能登录该用户在同一密码体系下的全部站点。为了避免这种损失，我们可以根据自身的条件和需求，采用以下几个级别的安全措施，安全程度递增。它们的共同特点是，&lt;strong>在重要的网站上都采用了各不相同的密码&lt;/strong>。一般情况下，做到第一点已经能保证自己不会因为密码问题而发生巨大并不可挽回的损失。&lt;/p>
&lt;h3 id="1-多级别密码">1. 多级别密码&lt;/h3>
&lt;p>考虑到人脑的记忆和有限，很难要求一个人把各种乱七八糟的网站密码记得一清二楚。于是我们退而求其次，将一些重要的密码分开，而对小网站则可以放松要求，使用统一、常年不变的弱密码。这方面的心得可以参考&lt;a href="http://www.zhihu.com/question/19695004/answer/12976049">吴涛在知乎的回答&lt;/a>。&lt;/p>
&lt;p>如果 A 和 B 网站的密码不同，黑客拿到用户在 A 网站的用户名和密码，尝试去撞 B 网站。尽管用户名已经在库中，但由于密码不同，撞库不会成功，最多会因为失败尝试过多而导致冻结。&lt;/p>
&lt;h3 id="2-各不相同的密码">2. 各不相同的密码&lt;/h3>
&lt;p>这一步开始，建议大家使用密码管理器，这是一种协助生成、管理密码的工具，能够方便地使用生成的强密码自动登录各个网站，并减小记忆成本。缺点则是一旦被攻破，所有的密码都被暴露了。Chrome 和苹果都有自带的管理工具，也可以使用常见的第三方产品，比如 LastPass、1Password、Keepass。具体请自行搜索。有了密码管理器，即使小网站拖库也不会波及其他小网站了。&lt;/p>
&lt;h3 id="3-前缀--网站识别符">3. 前缀 + 网站识别符&lt;/h3>
&lt;p>Gmail 邮箱有一个很棒的特点，可以在用户名后添加「+」+ 任意字符串，系统会自动过滤加号以后的内容，从而把邮件发到原邮箱中。比如一个 &lt;a href="mailto:user@gmail.com">user@gmail.com&lt;/a> 的邮箱，在 foo 网站使用了 &lt;a href="mailto:user+foo@gmail.com">user+foo@gmail.com&lt;/a> 作为注册邮箱，则相关的邮件仍会发到 &lt;a href="mailto:user@gmail.com">user@gmail.com&lt;/a> 中。同理，在 bar 网站，可用 &lt;a href="mailto:user+bar@gmail.com">user+bar@gmail.com&lt;/a> 作为注册邮箱。如果 foo 网站发生拖库，黑客使用电脑自动撞库，会因为 bar 网站不存在 &lt;a href="mailto:user+foo@gmail.com">user+foo@gmail.com&lt;/a> 这个帐号而失败。但是倘若黑客有意对该用户进行攻击，则可以通过 foo 网站的特征，猜出其在 bar 网站的帐号为 &lt;a href="mailto:user+bar@gmail.com">user+bar@gmail.com&lt;/a>。&lt;/p>
&lt;p>这种方法同样适用于注册各种小号、苹果的多国帐号等。&lt;/p>
&lt;h3 id="4-前缀--乱码">4. 前缀 + 乱码&lt;/h3>
&lt;p>如何不让猜出 bar 网站的用户名呢？只要给各个网站随机分配后缀就可以了。让 foo 网站的邮箱为 &lt;a href="mailto:user+wjv2@gmail.com">user+wjv2@gmail.com&lt;/a> ，bar 网站的邮箱为 &lt;a href="mailto:user+9m2q@gmail.com">user+9m2q@gmail.com&lt;/a>，便极大程度上杜绝了猜出用户名的可能性。&lt;/p>
&lt;h3 id="5-完全乱码">5. 完全乱码*&lt;/h3>
&lt;p>&lt;a href="mailto:sdi234mv@gmail.com">sdi234mv@gmail.com&lt;/a> 和 &lt;a href="mailto:jn02mb@gmail.com">jn02mb@gmail.com&lt;/a>，显然不存在任何联系，耶！但是这意味着要为每个帐号单独注册邮箱！你可以把它们都转发到你的主邮箱，但总体而言这种做法仍是牺牲了极大的便利性，换取一点几乎用不上的安全性提升。当然也可以通过设置个人域名邮箱来简化操作，但不是每个人都有自己的域名，而且独特的域名已经在昭示这些帐号拥有共同的主人。因此，我为这个方法加上了星号。它一点都不实用。&lt;/p>
&lt;p>然而很可惜，这些方法实际上很少能派上用场。有很多网站支持用户名（一个独一无二的字符串）登录，而且该字符串会被网站的其他用户看到（比如 Twitter 、 V2EX）。这样一来，以上 3、4 点都将无意义（你总不希望为了防止撞库，而在各个网站被人看到不同的名字吧？）。如果你想把淘宝的用户名改成一个乱码防止被撞，值得表扬，但淘宝支持手机号登录。别灰心，实际上第一点已经能够阻止绝大部分的拖库了。况且我们还有其他的措施。&lt;/p>
&lt;h2 id="两步验证">两步验证&lt;/h2>
&lt;p>不夸张地说，&lt;a href="https://en.wikipedia.org/wiki/Two-factor_authentication">两步验证（two-factor authentication）&lt;/a>已经成为一个合格重要网站的标配。用户在使用密码登录的同时，还需要输入手边的密码生成器中的随机验证码，从而防止因密码被盗而被别人异地登录。除非获知验证码的随机种子，否则难以破解。尽管增加了一道步骤，但很多网站的两步验证机制都支持在常用设备上免验证登录，大大简化了登录过程。建议在所有重要且支持两步验证的网站上开启。&lt;/p>
&lt;p>常见的两步验证包括手机短信、手机验证器、密码器（网银常用）等。其中采用最多、也最简便的方法是手机验证器，通过扫描网站二维码添加验证。这些在开启两步验证时会有介绍，不再赘述。&lt;/p>
&lt;p>开启后也并非万无一失，毕竟手机有丢失的风险，即使远程锁定，也会因为无法获取验证码，影响自己登录。对此，网站一般也提供了多种应急机制，比如备用手机号和恢复码。备用手机号很容易理解。恢复码是一系列用于代替两步验证的密码，网站通常会建议用户将其打印下来，保存在钱包或其他安全地点。个人建议保存多份，分别放在家中、工作单位、随身携带。如果不提供恢复码，也可以将开启两步验证时扫描的二维码打印。如果不方便打印，可以保存为图片，并加密压缩，存储在多个安全地点，比如 Dropbox、移动硬盘中。&lt;/p>
&lt;p>总而言之，&lt;strong>两步验证是密码失窃后最重要最有效的屏障&lt;/strong>（比密码保护问题靠谱得多），应尽量开启，并且&lt;strong>一定要做好手机丢失的应急预案&lt;/strong>。&lt;/p>
&lt;h2 id="安全性分析">安全性分析&lt;/h2>
&lt;p>下图展示了一位使用密码管理器的用户的安全分析。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>在开启了两步验证、以及各个网站使用不同密码后，我们的威胁主要来自三个方面：&lt;/p>
&lt;h3 id="1-密码管理器拖库">1. 密码管理器拖库&lt;/h3>
&lt;p>意味着所有密码都暴露了。但实际上一家做密码管理器的公司都有这种觉悟，它们或是有特别的加密技巧，或是干脆把数据库放到用户本地。然而话说回来，永远不要把希望寄托在他们身上，我们还是得做最坏的打算。首先尽快修改密码管理器的主密码，并按重要性排序，依次修改其他密码。如果数据库存在用户本地，请将他们放在安全的地方，比如多个移动硬盘，以及 Dropbox、Google Drive，并进行加密处理。&lt;/p>
&lt;h3 id="2-电脑丢失">2. 电脑丢失&lt;/h3>
&lt;p>首先请保证离开电脑随时锁屏。这样即使你去上厕所，别人也无法趁机获取信息。假设电脑被盗，尽快远程抹除。如果没有开启抹除，请登录密码管理器和其他重要网站，将丢失设备的远程下线。如果真的在此之前锁屏密码就被破解（只要密码不太弱，可能性就很低），那入侵者就可能获取你的密码管理器内容。不放心的话，每次使用密码管理器时都手输主密码吧。同理，Dropbox 中的内容也可以直接从解开锁屏的手机访问，所以不应该在其中存放未经加密的敏感信息。&lt;/p>
&lt;h3 id="3-手机丢失">3. 手机丢失&lt;/h3>
&lt;p>和电脑类似，同样请做好备份（最好是同步），尤其是通讯录和照片。锁屏也是必须的，如果有指纹识别，请使用指纹配合强密码，否则可选用不易被猜出的 PIN 或锁屏图案。同样，丢失后应尽快远程抹除或下线。如果已被入侵，由于手机是两步验证工具，所以比电脑失窃更加危险，一定要确保在每次使用密码管理器前都要求输入密码，或者指纹解锁。如果没有指纹，同样选可用 PIN 或锁屏图案。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>信息安全没有最好，只有更好。McAfee 说自己几乎不用只能手机，如果迫不得已，也会两周换一部。这对一般人并不现实，但或许我可以冒着政治不正确的风险说，一般人的信息安全也并没有那么重要。能够做到以上这些，起码能够在可接受的操作复杂度内，降低财产、社交、数据的损失。至于日常的通话是否被监听，毫无疑问是杞人忧天了。&lt;/p></description></item><item><title>Install Destor on Ubuntu 14.04</title><link>https://blog.hgao.net/post/install-destor-on-ubuntu/</link><pubDate>Sun, 11 Oct 2015 +0000</pubDate><guid>https://blog.hgao.net/post/install-destor-on-ubuntu/</guid><description>&lt;p>&lt;a href="https://github.com/fomy/destor">&lt;em>Destor&lt;/em>&lt;/a> is a platform for data deduplication evaluation developed by &lt;a href="https://github.com/fomy">Min Fu&lt;/a>. It runs on 64-bit Linux. I wanted to use it to compare the performance of existing deduplication schemes and those of my own. However, the installation process is a little bit complicated, which took me two days to make it work. My platform is 64-bit Ubuntu 14.04 with kernel 3.13.&lt;/p>
&lt;ol>
&lt;li>Download glib. Extract it to &lt;code>[PATH_TO_GLIB]&lt;/code>.&lt;/li>
&lt;li>Run the following commands.&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>sudo apt-get install zlib1g-dev
sudo apt-get install libffi-dev
cd [PATH_TO_GLIB]
./configure
make
sudo make install
cd /usr/local/
sudo cp include/glib-2.0/* include/
sudo cp lib/glib-2.0/include/glibconfig.h include/
cd lib
sudo link libglib-2.0.so libglib.so
sudo apt-get install libssl-dev
sudo apt-get install autotools-dev
sudo apt-get install automake
cd [DIR_OF_DESTOR]
./configure
automake --add-missing
make
sudo make install
&lt;/code>&lt;/pre></description></item><item><title>在 Android 6.0 Marshmallow 上开启 Google Now</title><link>https://blog.hgao.net/post/enable-google-now-on-android-6.0/</link><pubDate>Tue, 06 Oct 2015 +0000</pubDate><guid>https://blog.hgao.net/post/enable-google-now-on-android-6.0/</guid><description>&lt;p>&lt;strong>Note:&lt;/strong>&lt;/p>
&lt;p>感谢 &lt;a href="https://disqus.com/by/disqus_6awjvNqfHQ/">Tiany&lt;/a> 提醒，使用此法将导致 Google Play Store 不能使用。目前我通过登录另一个 Google 帐号解决该问题，参考了 &lt;a href="https://disqus.com/by/chammaxium/">Cham Maxium&lt;/a> 的方法：&lt;/p>
&lt;blockquote>
&lt;p>在 Account 里删除原有 Google 账号，再重新登入后，方可解决该问题。&lt;/p>
&lt;/blockquote>
&lt;p>以及 V2EX 上 &lt;a href="http://www.v2ex.com/member/ssenkrad">ssenkrad&lt;/a> 的方法:&lt;/p>
&lt;blockquote>
&lt;p>@lonelinsky 5.0 时候发现的， 6.0 是否还适用不得而知，手机上登陆两个 google 账号，开启 google now 之后退出重新登录任意一个，两个账号就都能用 play 了。&lt;/p>
&lt;/blockquote>
&lt;p>感谢二位。&lt;/p>
&lt;hr>
&lt;p>总体步骤和之前 5.1 类似，只是有些选项的位置发生了改变，需要稍加寻找。Nexus 5 刷原厂镜像（MRA58K）测试通过。&lt;/p>
&lt;ol>
&lt;li>更改系统语言为英语；&lt;/li>
&lt;li>关闭 &lt;code>Location&lt;/code>，开启飞行模式，打开 Wi-Fi；&lt;/li>
&lt;li>进入 &lt;code>Settings -&amp;gt; Apps&lt;/code>，&lt;strong>点击右上角三个点，选择 &lt;code>Show System&lt;/code>&lt;/strong>；&lt;/li>
&lt;li>在列表中找到 &lt;code>Google App&lt;/code>，点击 &lt;code>Storage&lt;/code>，点击 &lt;code>MANAGE SPACE&lt;/code>，点击&lt;code>CLEAR ALL DATA&lt;/code>；&lt;/li>
&lt;li>对 &lt;code>Google Play services&lt;/code>、&lt;code>Google Play Store&lt;/code>、&lt;code>Google Services Framework&lt;/code> 进行同样操作；&lt;/li>
&lt;li>回到&lt;code>Settings&lt;/code>，选择 &lt;code>Google&lt;/code>，点击 &lt;code>Search &amp;amp; Now&lt;/code>，点击 &lt;code>Accounts &amp;amp; privacy&lt;/code>，点击 &lt;code>Google Account&lt;/code>，选择 &lt;code>Sign out&lt;/code>；&lt;/li>
&lt;li>回到刚才的界面，再次点击 &lt;code>Google Account&lt;/code>，选择之前登录过的帐号。&lt;/li>
&lt;/ol></description></item></channel></rss>